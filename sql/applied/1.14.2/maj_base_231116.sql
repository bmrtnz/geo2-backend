CREATE TABLE GEO_ALERT 
(K_ALERT 		NUMBER,
 COD_TYP_ALERT 	VARCHAR2(1) default 'I',
 IND_DEROUL 	VARCHAR2(1) default 'O',
 DAT_DEBUT 		DATE default sysdate not null, 
 DAT_FIN 		DATE,
 VALIDE 		VARCHAR2(1) default 'O',
 MESSAGE 		VARCHAR2(1024),
 SCO_CODE		VARCHAR2(3),
 CRE_USER 		VARCHAR2(35),
 CRE_DAT		DATE default sysdate not null, 
 PRIMARY KEY (K_ALERT));

COMMENT ON COLUMN GEO_ALERT.COD_TYP_ALERT IS 'W:WARNING I:INFO  S:SUCCESS'; 
COMMENT ON COLUMN GEO_ALERT.IND_DEROUL IS 'DEROULANT  O:OUI N:NON';
COMMENT ON COLUMN GEO_ALERT.DAT_DEBUT IS 'Date de d√©but d alerte';
COMMENT ON COLUMN GEO_ALERT.DAT_FIN IS 'Date de fin d alerte';
COMMENT ON COLUMN GEO_ALERT.SCO_CODE IS 'si vide pour tout le monde sinon par secteur';



 
DROP SEQUENCE GEO_ADMIN.SEQ_K_ALERT;

CREATE SEQUENCE GEO_ADMIN.SEQ_K_ALERT
  START WITH 1
  MAXVALUE 999999999
  MINVALUE 1
  CYCLE
  NOCACHE
  NOORDER;

 
CREATE OR REPLACE FUNCTION GEO_ADMIN.F_SEQ_K_ALERT
RETURN NUMBER IS result NUMBER;
BEGIN
        SELECT  SEQ_K_ALERT.NEXTVAL INTO result FROM dual;
        RETURN result;
END;
/
CREATE OR REPLACE TRIGGER "GEO_ADMIN".TRG_INS_ALERT
	BEFORE INSERT ON GEO_ALERT FOR EACH ROW	
DECLARE
	 x_num NUMBER;
	 x_user  VARCHAR2(35);
	BEGIN
	 SELECT sys_context('USERENV','OS_USER') INTO x_user FROM dual;
	 SELECT SEQ_K_ALERT.NEXTVAL INTO x_num FROM dual;
	 :NEW.CRE_user := x_user;
	 :NEW.K_ALERT  :=x_num;
	 
	END;
/