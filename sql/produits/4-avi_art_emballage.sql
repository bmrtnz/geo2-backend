-- TABLE AVI_ART_EMBALLAGE
CREATE TABLE AVI_ART_EMBALLAGE
(
    REF_EMBALLAGE    VARCHAR2(6 BYTE),
    ESP_CODE         VARCHAR2(6 BYTE)  NOT NULL,
    COL_CODE         VARCHAR2(12 BYTE) NOT NULL,
    COL_PDNET        NUMBER(8, 3),
    COL_PREPESE      VARCHAR2(1 BYTE),
    COS_CODE         VARCHAR2(6 BYTE),
    U_PAR_COLIS      NUMBER(4),
    UC_PDNET_GARANTI NUMBER(8, 3),
    ALV_CODE         VARCHAR2(6 BYTE),
    MAQ_CODE         VARCHAR2(6 BYTE),
    CRE_USER         VARCHAR2(35 BYTE),
    CRE_DATE         DATE,
    MOD_USER         VARCHAR2(35 BYTE),
    MOD_DATE         DATE,
    VALIDE           VARCHAR2(1 BYTE) DEFAULT 'O'
)
    TABLESPACE GEO_DATA
    PCTUSED 0
    PCTFREE 10
    INITRANS 1
    MAXTRANS 255
    STORAGE
(
    INITIAL 3M
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    PCTINCREASE 0
    BUFFER_POOL DEFAULT
)
    LOGGING
    NOCACHE
    NOPARALLEL;

ALTER TABLE AVI_ART_EMBALLAGE
    ADD (
        CONSTRAINT FK_EMBALLAGE_ESPECE FOREIGN KEY (ESP_CODE)
            REFERENCES GEO_ESPECE (ESP_CODE));

ALTER TABLE AVI_ART_EMBALLAGE
    ADD (
        CONSTRAINT FK_EMBALLAGE_COLIS FOREIGN KEY (ESP_CODE, COL_CODE)
            REFERENCES GEO_COLIS (ESP_CODE, COL_CODE));

ALTER TABLE AVI_ART_EMBALLAGE
    ADD (
        CONSTRAINT FK_EMBALLAGE_COS_CODE FOREIGN KEY (ESP_CODE, COS_CODE)
            REFERENCES GEO_CONSPE (ESP_CODE, COS_CODE));

ALTER TABLE AVI_ART_EMBALLAGE
    ADD (
        CONSTRAINT FK_EMBALLAGE_MAQ_CODE FOREIGN KEY (ESP_CODE, MAQ_CODE)
            REFERENCES GEO_MARQUE (ESP_CODE, MAQ_CODE));

ALTER TABLE AVI_ART_GESTION
    ADD (
        CONSTRAINT FK_GESTION_EMBALLAGE FOREIGN KEY (REF_EMBALLAGE)
            REFERENCES AVI_ART_EMBALLAGE (REF_EMBALLAGE));

COMMENT ON COLUMN AVI_ART_EMBALLAGE.COL_CODE IS 'FK emballage';
COMMENT ON COLUMN AVI_ART_EMBALLAGE.COL_PDNET IS 'poids net colis';
COMMENT ON COLUMN AVI_ART_EMBALLAGE.COS_CODE IS 'FK condit spécial';
COMMENT ON COLUMN AVI_ART_EMBALLAGE.U_PAR_COLIS IS 'nombre d''unités par colis';
COMMENT ON COLUMN AVI_ART_EMBALLAGE.UC_PDNET_GARANTI IS 'poids net garanti UC';
COMMENT ON COLUMN AVI_ART_EMBALLAGE.COL_PREPESE IS 'pré-pesé O/N';
COMMENT ON COLUMN AVI_ART_EMBALLAGE.ALV_CODE IS 'FK alvéoles';
COMMENT ON COLUMN AVI_ART_EMBALLAGE.MAQ_CODE IS 'FK marque';

CREATE OR REPLACE TRIGGER AVI_ART_EMBALLAGE_BEF_INS
    BEFORE INSERT
    ON AVI_ART_EMBALLAGE
    FOR EACH ROW
declare
    x_user varchar2(35);
begin
    if (:new.cre_user is null) then
        select sys_context('USERENV', 'OS_USER') into x_user from dual;
        :new.cre_user := x_user;
    end if;
    if (:new.cre_date is null) then
        :new.cre_date := sysdate;
    end if;
    if (:new.valide is null) then
        :new.valide := 'O';
    end if;
end;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER AVI_ART_EMBALLAGE_BEF_UPD
    BEFORE UPDATE
    ON AVI_ART_EMBALLAGE
    FOR EACH ROW
declare
    x_user varchar2(35);
begin
    if (:new.mod_user is null) then
        select sys_context('USERENV', 'OS_USER') into x_user from dual;
        :new.mod_user := x_user;
    end if;
    if (:new.mod_date is null) then
        :new.mod_date := sysdate;
    end if;

end;
/
SHOW ERRORS;

ALTER TABLE AVI_ART_EMBALLAGE
    ADD (
        CONSTRAINT PK_AVI_ART_MEMBALLAGE PRIMARY KEY (REF_EMBALLAGE)
            USING INDEX
                TABLESPACE GEO_INDX
                PCTFREE 10
                INITRANS 2
                MAXTRANS 255
                STORAGE (
                INITIAL 1032 K
                MINEXTENTS 1
                MAXEXTENTS 2147483645
                PCTINCREASE 0
                ));

CREATE UNIQUE INDEX UNIQUE_ART_EMBALLAGE ON AVI_ART_EMBALLAGE
    (ESP_CODE, COL_CODE, COL_PDNET, COL_PREPESE, COS_CODE, ALV_CODE, MAQ_CODE, U_PAR_COLIS, UC_PDNET_GARANTI)
    LOGGING
    TABLESPACE GEO_INDX
    PCTFREE 10
    INITRANS 2
    MAXTRANS 255
    STORAGE (
    INITIAL 1032 K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    PCTINCREASE 0
    BUFFER_POOL DEFAULT
    )
    NOPARALLEL;

CREATE SEQUENCE GEO_ADMIN.SEQ_AVI_ART_EMBALLAGE START WITH 0 NOMAXVALUE MINVALUE 0 NOCYCLE NOCACHE NOORDER;
CREATE OR REPLACE FUNCTION F_SEQ_AVI_ART_EMBALLAGE
    RETURN VARCHAR2 IS result VARCHAR2(6);
BEGIN
    SELECT  TO_CHAR(seq_AVI_ART_EMBALLAGE.NEXTVAL,'FM0XXXXX') INTO result FROM dual;
    RETURN result;
END;
/
