-- TABLE AVI_ART_NORMALISATION
CREATE TABLE AVI_ART_NORMALISATION
(
    REF_NORMALISATION VARCHAR2(6 BYTE),
    ESP_CODE          VARCHAR2(6 BYTE) NOT NULL,
    CAM_CODE          VARCHAR2(6 BYTE) NOT NULL,
    COM_CLIENT        VARCHAR2(35 BYTE),
    ETC_CODE          VARCHAR2(6 BYTE),
    ETF_CODE          VARCHAR2(6 BYTE),
    ETP_CODE          VARCHAR2(6 BYTE),
    ETV_CODE          VARCHAR2(6 BYTE),
    GTIN_COLIS        VARCHAR2(35 BYTE),
    GTIN_PALETTE      VARCHAR2(35 BYTE),
    GTIN_UC           VARCHAR2(35 BYTE),
    PDE_CLIART        VARCHAR2(35 BYTE),
    IDS_CODE          VARCHAR2(6 BYTE),
    MAQ_CODE          VARCHAR2(6 BYTE),
    MDD               VARCHAR2(1 BYTE),
    CRE_USER          VARCHAR2(35 BYTE),
    CRE_DATE          DATE,
    MOD_USER          VARCHAR2(35 BYTE),
    MOD_DATE          DATE,
    VALIDE            VARCHAR2(1 BYTE) DEFAULT 'O'
)
    TABLESPACE GEO_DATA
    PCTUSED 0
    PCTFREE 10
    INITRANS 1
    MAXTRANS 255
    STORAGE
(
    INITIAL 3M
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    PCTINCREASE 0
    BUFFER_POOL DEFAULT
)
    LOGGING
    NOCACHE
    NOPARALLEL;

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT PK_AVI_ART_NORMALISATION PRIMARY KEY (REF_NORMALISATION)
            USING INDEX
                TABLESPACE GEO_INDX
                PCTFREE 10
                INITRANS 2
                MAXTRANS 255
                STORAGE (
                INITIAL 1032 K
                MINEXTENTS 1
                MAXEXTENTS 2147483645
                PCTINCREASE 0
                ));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_ESPECE FOREIGN KEY (ESP_CODE)
            REFERENCES GEO_ESPECE (ESP_CODE));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_CAM_CODE FOREIGN KEY (ESP_CODE, CAM_CODE)
            REFERENCES GEO_CALMAR (ESP_CODE, CAM_CODE));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_ETC_CODE FOREIGN KEY (ESP_CODE, ETC_CODE)
            REFERENCES GEO_ETICOL (ESP_CODE, ETC_CODE));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_ETV_CODE FOREIGN KEY (ESP_CODE, ETV_CODE)
            REFERENCES GEO_ETIEVT (ESP_CODE, ETV_CODE));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_ETF_CODE FOREIGN KEY (ESP_CODE, ETF_CODE)
            REFERENCES GEO_ETIFRU (ESP_CODE, ETF_CODE));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_ETP_CODE FOREIGN KEY (ESP_CODE, ETP_CODE)
            REFERENCES GEO_ETIPMB (ESP_CODE, ETP_CODE));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_IDS_CODE FOREIGN KEY (ESP_CODE, IDS_CODE)
            REFERENCES GEO_IDSYMB (ESP_CODE, IDS_CODE));

ALTER TABLE AVI_ART_NORMALISATION
    ADD (
        CONSTRAINT FK_NORMALISATION_MAQ_CODE FOREIGN KEY (ESP_CODE, MAQ_CODE)
            REFERENCES GEO_MARQUE (ESP_CODE, MAQ_CODE));

ALTER TABLE AVI_ART_GESTION
    ADD (
        CONSTRAINT FK_GESTION_NORMALISATION FOREIGN KEY (REF_NORMALISATION)
            REFERENCES AVI_ART_NORMALISATION (REF_NORMALISATION));

COMMENT ON COLUMN AVI_ART_NORMALISATION.CAM_CODE IS 'FK calibre marquage';
COMMENT ON COLUMN AVI_ART_NORMALISATION.ETF_CODE IS 'FK stickeur';
COMMENT ON COLUMN AVI_ART_NORMALISATION.ETC_CODE IS 'FK etiquette client';
COMMENT ON COLUMN AVI_ART_NORMALISATION.ETP_CODE IS 'FK etiquette/UC';
COMMENT ON COLUMN AVI_ART_NORMALISATION.ETV_CODE IS 'FK étiquette évènementielle';
COMMENT ON COLUMN AVI_ART_NORMALISATION.GTIN_UC IS 'GTIN UC';
COMMENT ON COLUMN AVI_ART_NORMALISATION.GTIN_COLIS IS 'GTIN carton';
COMMENT ON COLUMN AVI_ART_NORMALISATION.GTIN_PALETTE IS 'GTIN palette';
COMMENT ON COLUMN AVI_ART_NORMALISATION.PDE_CLIART IS 'article client';
COMMENT ON COLUMN AVI_ART_NORMALISATION.COM_CLIENT IS 'description spéciale calibre client';
COMMENT ON COLUMN AVI_ART_NORMALISATION.IDS_CODE IS 'FK id.symb emb.exp';
COMMENT ON COLUMN AVI_ART_NORMALISATION.MAQ_CODE IS 'FK marque';
COMMENT ON COLUMN AVI_ART_NORMALISATION.MDD IS 'produit MDD (O/N)';

CREATE OR REPLACE TRIGGER AVI_ART_NORMALISATION_BEF_INS
    BEFORE INSERT
    ON AVI_ART_NORMALISATION
    FOR EACH ROW
declare
    x_user varchar2(35);
begin
    if (:new.cre_user is null) then
        select sys_context('USERENV', 'OS_USER') into x_user from dual;
        :new.cre_user := x_user;
    end if;
    if (:new.cre_date is null) then
        :new.cre_date := sysdate;
    end if;
    if (:new.valide is null) then
        :new.valide := 'O';
    end if;
end;
/
SHOW ERRORS;


CREATE OR REPLACE TRIGGER AVI_ART_NORMALISATION_BEF_UPD
    BEFORE UPDATE
    ON AVI_ART_NORMALISATION
    FOR EACH ROW
declare
    x_user varchar2(35);
begin
    if (:new.mod_user is null) then
        select sys_context('USERENV', 'OS_USER') into x_user from dual;
        :new.mod_user := x_user;
    end if;
    if (:new.mod_date is null) then
        :new.mod_date := sysdate;
    end if;
end;
/
SHOW ERRORS;

CREATE UNIQUE INDEX UNIQUE_ART_NORMALISATION ON AVI_ART_NORMALISATION
    (ESP_CODE, CAM_CODE, ETC_CODE, ETF_CODE, ETP_CODE, ETV_CODE, GTIN_COLIS, GTIN_PALETTE, GTIN_UC, PDE_CLIART,
     IDS_CODE, MAQ_CODE, MDD, COM_CLIENT)
    LOGGING
    TABLESPACE GEO_INDX
    PCTFREE 10
    INITRANS 2
    MAXTRANS 255
    STORAGE (
    INITIAL 1032 K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    PCTINCREASE 0
    BUFFER_POOL DEFAULT
    )
    NOPARALLEL;

CREATE SEQUENCE GEO_ADMIN.SEQ_AVI_ART_NORMALISATION START WITH 0 NOMAXVALUE MINVALUE 0 NOCYCLE NOCACHE NOORDER;
CREATE OR REPLACE FUNCTION F_SEQ_AVI_ART_NORMALISATION
    RETURN VARCHAR2 IS
    result VARCHAR2(6);
BEGIN
    SELECT TO_CHAR(seq_AVI_ART_NORMALISATION.NEXTVAL, 'FM0XXXXX') INTO result FROM dual;
    RETURN result;
END;
/
