<?xml version="1.0" encoding="utf-8"?>
<entity-mappings version="2.1"
  xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">

  <named-native-query
      name="Pays.allPaysDepassement"
      result-class="fr.microtec.geo2.persistance.entity.tiers.GeoPaysDepassement"
  >
    <query>
        <![CDATA[
        SELECT
                GEO_CLIENT.PAY_CODE,
                sum(geo_client.enc_assure) "pays_permanent",
                sum(geo_client.enc_depasse) "pays_temporaire",
                sum(geo_client.enc_bw) "pays_bw",
                sum(geo_client.enc_bw + geo_client.enc_assure + geo_client.enc_depasse ) "pays_autorise",
                sum(geo_client.enc_actuel - ( geo_client.enc_bw + geo_client.enc_assure + geo_client.enc_depasse)) "pays_depasst",
                sum(geo_client.enc_actuel) "pays_solde",
                sum(geo_client.enc_0) "pays_non_echu",
                sum(geo_client.enc_1) "pays_1_30",
                sum(geo_client.enc_2) "pays_31_60",
                sum(geo_client.enc_3) "pays_61_90",
                sum(geo_client.enc_4) "pays_90",
                sum(geo_client.alerte_coface) "pays_COFACE"
        FROM
                GEO_CLIENT,
                GEO_PAYS
        WHERE
                GEO_PAYS.PAY_CODE = GEO_CLIENT.PAY_CODE
            AND
                    geo_client.sco_code LIKE :arg_sco_code
            AND

                    (geo_client.enc_0 + geo_client.enc_1 + geo_client.enc_2 + geo_client.enc_3 + geo_client.enc_4) > 0
            AND

                    geo_client.soc_code = :arg_soc_code
            AND

                    geo_client.per_code_com like :arg_com_code

            AND

                GEO_PAYS.sco_code = geo_client.sco_code
            AND geo_pays.valide = 'O'
            AND geo_client.valide = 'O'
        GROUP BY
                    GEO_CLIENT.SOC_CODE,
                    GEO_CLIENT.SCO_CODE,
                    GEO_CLIENT.pay_code
        ]]>
        </query>
    </named-native-query>

  <named-native-query
      name="Pays.countPaysDepassement"
  >
    <query>
        <![CDATA[
        	SELECT
                COUNT(c.cli_code)
            FROM
                    geo_pays p,
                    geo_client c
            WHERE p.pay_code = c.pay_code
            AND p.sco_code like :arg_sco_code
            AND c.valide = 'O'
            AND COALESCE(c.enc_actuel, 0) - (COALESCE(c.enc_assure, 0) + COALESCE(c.enc_depasse, 0) + COALESCE(c.enc_bw, 0))>0
            AND c.soc_code = :arg_soc_code
            AND p.valide = 'O'
        ]]>
        </query>
    </named-native-query>

</entity-mappings>
