<?xml version="1.0" encoding="utf-8"?>
<entity-mappings version="2.1"
  xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">

  <!-- PLANNING TRANSPORTEUR -->
  <named-native-query
    name="Ordre.allPlanningTransporteurs"
    result-class="fr.microtec.geo2.persistance.entity.ordres.GeoPlanningTransporteur"
  >
    <query>
    <![CDATA[
      SELECT
      ROWNUM,
      CEIL(
        sum(
          case
            geo_ordlig.PAL_NB_COL
            when 0 then geo_ordlig.cde_nb_pal
            else (
              case
                when geo_ordlig.DEMIPAL_IND = 1
                OR geo_ordlig.PAL_NB_PALINTER > 0 then geo_ordlig.CDE_NB_COL / (geo_ordlig.PAL_NB_COL * 2)
                else geo_ordlig.CDE_NB_COL / geo_ordlig.PAL_NB_COL
              END
            )
          END
        )
      ) as somme_colis_palette,
      sum(geo_ordlig.cde_nb_col) as somme_colis_commandes,
      round(
        sum(
          case
            geo_ordlig.PAL_NB_COL
            when 0 then geo_ordlig.cde_nb_pal
            else (
              case
                when geo_ordlig.DEMIPAL_IND = 1
                OR geo_ordlig.PAL_NB_PALINTER > 0 then geo_ordlig.CDE_NB_COL / (geo_ordlig.PAL_NB_COL * 2)
                else geo_ordlig.CDE_NB_COL / geo_ordlig.PAL_NB_COL
              END
            )
          END
        ),
        2
      ) as somme_colis_palette_bis,
      geo_ordre.ord_ref,
      geo_ordre.code_chargement,
      geo_entrep.cen_code,
      geo_entrep.raisoc,
      geo_entrep.zip as ezip,
      geo_entrep.ville,
      geo_entrep.pay_code as epay,
      geo_ordre.nordre,
      geo_ordlog.datdep_fou_p,
      geo_fourni.zip,
      geo_fourni.pay_code,
      geo_ordlog.datdep_grp_p,
      geo_ordlog.grp_code,
      avi_art_mat_prem.esp_code,
      geo_ordlig.pal_code,
      geo_ordre.version_ordre,
      geo_ordre.trp_code,
      GEO_ORDRE.LIVDATP,
      'O' "flag_entrepot",
      avi_art_emballage.col_code,
      geo_ordre.ref_cli,
      geo_ordlog.fou_code
    FROM
      geo_entrep,
      geo_ordlig,
      geo_ordlog,
      geo_ordre,
      avi_art_gestion,
      avi_art_mat_prem,
      avi_art_emballage,
      geo_fourni
    WHERE
      geo_entrep.cen_ref = geo_ordre.cen_ref
      and geo_ordlig.ord_ref = geo_ordre.ord_ref
      and geo_ordlog.ord_ref = geo_ordlig.ord_ref
      and geo_ordlog.fou_code = geo_ordlig.fou_code
      and avi_art_gestion.art_ref = geo_ordlig.art_ref
      and avi_art_mat_prem.ref_mat_prem = avi_art_gestion.ref_mat_prem
      and avi_art_emballage.ref_emballage = avi_art_gestion.ref_emballage
      and geo_ordlog.datdep_fou_p between :arg_date_min
      and :arg_date_max
      and geo_ordre.soc_code = :arg_soc_code
      and (
        geo_ordre.trp_code = :arg_trp_code
        or geo_ordlog.trp_code = :arg_trp_code
      )
      and geo_ordlog.fou_code =geo_fourni.fou_code
    GROUP by
      ROWNUM,
      geo_ordre.ord_ref,
      geo_ordre.code_chargement,
      geo_entrep.cen_code,
      geo_entrep.raisoc,
      geo_entrep.zip,
      geo_entrep.ville,
      geo_entrep.pay_code,
      geo_ordre.nordre,
      geo_ordlog.datdep_fou_p,
      geo_ordlog.fou_code,
      geo_fourni.zip,
      geo_fourni.pay_code,
      geo_ordlog.datdep_grp_p,
      geo_ordlog.grp_code,
      avi_art_mat_prem.esp_code,
      geo_ordlig.pal_code,
      geo_ordre.version_ordre,
      geo_ordre.trp_code,
      geo_ordre.livdatp,
      avi_art_emballage.col_code,
      geo_ordre.ref_cli
    ]]>
    </query>
  </named-native-query>

  <named-native-query
      name="OrdreEdi.allCommandeEdi"
      result-class="fr.microtec.geo2.persistance.entity.ordres.GeoCommandeEdi"
  >
    <query>
        <![CDATA[
        select
            ROWNUM, O.REF_EDI_ORDRE, O.REF_CMD_CLI, O.CLI_REF, DECODE(O.CEN_REF, '-', null, O.CEN_REF) AS CEN_REF,
            O.DATE_LIV, O.SRC_FILE, O.VERSION, L.NUM_LIGNE, L.LIBELLE_PRODUIT, L.PAR_COMBIEN,
            L.QUANTITE, L.QUANTITE_COLIS, L.UNITE_QTT, L.TYPE_COLIS, O.MASK_MODIF AS MASK_ORDRE,
            L.MASK_MODIF AS MASK_LIGNE, L.LIST_REF_ART, L.EAN_PROD_CLIENT, L.PRIX_VENTE, O.STATUS, O.ORD_REF,
            O.DATE_DOC, O.STATUS_GEO, L.EAN_PROD_BW, L.EAN_COLIS_CLIENT, L.EAN_COLIS_BW, L.OP_MARKETING, L.REF_EDI_LIGNE,
            L.STATUS AS STATUS_LIGNE, f_geo2_init_blocage_ordre(O.ORD_REF) as INIT_BLOCAGE_ORDRE
        from
            geo_edi_ordre O, geo_client C, geo_entrep E, geo_edi_ligne L
        where
            O.CLI_REF = C.CLI_REF AND
            E.CEN_REF (+)= O.CEN_REF AND
            L.REF_EDI_ORDRE = O.REF_EDI_ORDRE AND
            C.SCO_CODE = :arg_sco_code and
            C.CLI_CODE LIKE :arg_cli_code AND
            O.STATUS_GEO LIKE :arg_status AND
            O.DATE_LIV >= :arg_date_min AND
            O.DATE_LIV <= :arg_date_max AND
            C.PER_CODE_ASS LIKE :arg_assist AND
            C.PER_CODE_COM LIKE :arg_com AND
            O.REF_EDI_ORDRE LIKE :arg_ref_edi_ord
        order by
            O.REF_CMD_CLI, O.DATE_LIV
        ]]>
        </query>
    </named-native-query>
    <named-native-query
        name="OrdreEdi.allClientEdi"
        result-class="fr.microtec.geo2.persistance.entity.tiers.GeoClient"
    >
        <query>
            <![CDATA[
            Select distinct C.*
            from  geo_edi_ordre O, geo_client C
            where O.CLI_REF = C.CLI_REF AND
                  C.SCO_CODE = :arg_sco_code AND
                  C.PER_CODE_ASS like :arg_ass_code AND
                  C.PER_CODE_COM like :arg_com_code
            order by C.CLI_CODE
            ]]>
        </query>
    </named-native-query>

</entity-mappings>
